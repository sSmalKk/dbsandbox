openapi: 3.0.0
info:
  title: e_commerce_mvc_mongodb
  version: 1.0.0
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    undefinedAuth:
      type: http
tags:
  - name: admin
    description: admin APIs
  - name: admin > Chat_group
    description: Chat_group Model APIs
  - name: admin > File Upload
    description: Upload Files
  - name: admin > Chat_message
    description: Chat_message Model APIs
  - name: admin > item
    description: item Model APIs
  - name: admin > model
    description: model Model APIs
  - name: admin > material
    description: material Model APIs
  - name: admin > blockstate
    description: blockstate Model APIs
  - name: admin > planet
    description: planet Model APIs
  - name: admin > cluster
    description: cluster Model APIs
  - name: admin > chunk
    description: chunk Model APIs
  - name: admin > universe
    description: universe Model APIs
  - name: admin > user
    description: user Model APIs
  - name: admin > login
    description: admin Login
  - name: admin > role
    description: role Model APIs
  - name: admin > projectRoute
    description: projectRoute Model APIs
  - name: admin > routeRole
    description: routeRole Model APIs
  - name: admin > userRole
    description: userRole Model APIs
  - name: device
    description: device APIs
  - name: device > Chat_group
    description: Chat_group Model APIs
  - name: device > File Upload
    description: Upload Files
  - name: device > Chat_message
    description: Chat_message Model APIs
  - name: device > item
    description: item Model APIs
  - name: device > model
    description: model Model APIs
  - name: device > material
    description: material Model APIs
  - name: device > blockstate
    description: blockstate Model APIs
  - name: device > planet
    description: planet Model APIs
  - name: device > cluster
    description: cluster Model APIs
  - name: device > chunk
    description: chunk Model APIs
  - name: device > universe
    description: universe Model APIs
  - name: device > user
    description: user Model APIs
  - name: device > login
    description: device Login
  - name: client
    description: client APIs
  - name: client > Chat_group
    description: Chat_group Model APIs
  - name: client > File Upload
    description: Upload Files
  - name: client > Chat_message
    description: Chat_message Model APIs
  - name: client > item
    description: item Model APIs
  - name: client > model
    description: model Model APIs
  - name: client > material
    description: material Model APIs
  - name: client > blockstate
    description: blockstate Model APIs
  - name: client > planet
    description: planet Model APIs
  - name: client > cluster
    description: cluster Model APIs
  - name: client > chunk
    description: chunk Model APIs
  - name: client > universe
    description: universe Model APIs
  - name: client > user
    description: user Model APIs
  - name: client > login
    description: client Login
paths:
  /admin/chat_group/{id}:
    get:
      tags:
        - admin > Chat_group
      summary: getChat_group
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d89607b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-08T07:36:11.782Z'
                  updatedAt: '2024-12-25T20:17:02.588Z'
  /admin/chat_group/create:
    post:
      tags:
        - admin > Chat_group
      summary: addChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Grant Wolff
                code: web-enabled
                admin: cutting-edge
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d896079
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-08T07:36:11.782Z'
                  updatedAt: '2024-12-25T20:17:02.588Z'
  /admin/chat_group/list:
    post:
      tags:
        - admin > Chat_group
      summary: findAllChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Grant Wolff
                      code: web-enabled
                      admin: cutting-edge
                      id: 66901e9e73fe54012d89607a
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-09-08T07:36:11.782Z'
                      updatedAt: '2024-12-25T20:17:02.588Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/chat_group/count:
    post:
      tags:
        - admin > Chat_group
      summary: getChat_groupCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/chat_group/addBulk:
    post:
      tags:
        - admin > Chat_group
      summary: insertBulkChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Grant Wolff
                    code: web-enabled
                    admin: cutting-edge
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_group/deleteMany:
    post:
      tags:
        - admin > Chat_group
      summary: deleteManyChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_group/update/{id}:
    put:
      tags:
        - admin > Chat_group
      summary: updateChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Grant Wolff
                code: web-enabled
                admin: cutting-edge
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d89607c
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-08T07:36:11.782Z'
                  updatedAt: '2024-12-25T20:17:02.588Z'
  /admin/chat_group/partial-update/{id}:
    put:
      tags:
        - admin > Chat_group
      summary: partialupdateChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d89607d
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-08T07:36:11.782Z'
                  updatedAt: '2024-12-25T20:17:02.588Z'
  /admin/chat_group/softDelete/{id}:
    put:
      tags:
        - admin > Chat_group
      summary: softDeleteChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_group/softDeleteMany:
    put:
      tags:
        - admin > Chat_group
      summary: softDeleteManyChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_group/updateBulk:
    put:
      tags:
        - admin > Chat_group
      summary: updateBulkChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_group/delete/{id}:
    delete:
      tags:
        - admin > Chat_group
      summary: deleteChat_group
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/upload:
    post:
      tags:
        - admin > File Upload
      summary: File upload in admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Select file/s to upload
                  format: binary
                folder:
                  type: string
                  description: Optional, enable to upload file to specific folder
                  example: Enter foldername
                fileName:
                  type: string
                  description: Optional, enable to give Specific file name to uploaded File
                  example: Enter fileName
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: path to download file
  /admin/chat_message/{id}:
    get:
      tags:
        - admin > Chat_message
      summary: getChat_message
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d896092
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-09T22:54:39.343Z'
                  updatedAt: '2024-09-19T02:52:16.624Z'
  /admin/chat_message/create:
    post:
      tags:
        - admin > Chat_message
      summary: addChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: invoice
                sender: open
                recipient: Direct
                groupId: 66901e9e73fe54012d89608e
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d896090
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-09T22:54:39.343Z'
                  updatedAt: '2024-09-19T02:52:16.624Z'
  /admin/chat_message/list:
    post:
      tags:
        - admin > Chat_message
      summary: findAllChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - message: invoice
                      sender: open
                      recipient: Direct
                      groupId: 66901e9e73fe54012d89608e
                      id: 66901e9e73fe54012d896091
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-11-09T22:54:39.343Z'
                      updatedAt: '2024-09-19T02:52:16.624Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/chat_message/count:
    post:
      tags:
        - admin > Chat_message
      summary: getChat_messageCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/chat_message/addBulk:
    post:
      tags:
        - admin > Chat_message
      summary: insertBulkChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - message: invoice
                    sender: open
                    recipient: Direct
                    groupId: 66901e9e73fe54012d89608e
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_message/deleteMany:
    post:
      tags:
        - admin > Chat_message
      summary: deleteManyChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_message/update/{id}:
    put:
      tags:
        - admin > Chat_message
      summary: updateChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: invoice
                sender: open
                recipient: Direct
                groupId: 66901e9e73fe54012d89608e
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d896093
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-09T22:54:39.343Z'
                  updatedAt: '2024-09-19T02:52:16.624Z'
  /admin/chat_message/partial-update/{id}:
    put:
      tags:
        - admin > Chat_message
      summary: partialupdateChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d896094
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-09T22:54:39.343Z'
                  updatedAt: '2024-09-19T02:52:16.624Z'
  /admin/chat_message/softDelete/{id}:
    put:
      tags:
        - admin > Chat_message
      summary: softDeleteChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_message/softDeleteMany:
    put:
      tags:
        - admin > Chat_message
      summary: softDeleteManyChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_message/updateBulk:
    put:
      tags:
        - admin > Chat_message
      summary: updateBulkChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chat_message/delete/{id}:
    delete:
      tags:
        - admin > Chat_message
      summary: deleteChat_message
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/item/{id}:
    get:
      tags:
        - admin > item
      summary: getitem
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960a9
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-18T13:21:06.597Z'
                  updatedAt: '2025-04-14T02:35:25.210Z'
  /admin/item/create:
    post:
      tags:
        - admin > item
      summary: additem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Emanuel Oberbrunner
                description: Bedfordshire
                image: Stand-alone
                blockstate: 66901e9e73fe54012d8960a5
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960a7
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-18T13:21:06.597Z'
                  updatedAt: '2025-04-14T02:35:25.210Z'
  /admin/item/list:
    post:
      tags:
        - admin > item
      summary: findAllitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Emanuel Oberbrunner
                      description: Bedfordshire
                      image: Stand-alone
                      blockstate: 66901e9e73fe54012d8960a5
                      id: 66901e9e73fe54012d8960a8
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-02-18T13:21:06.597Z'
                      updatedAt: '2025-04-14T02:35:25.210Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/item/count:
    post:
      tags:
        - admin > item
      summary: getitemCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/item/addBulk:
    post:
      tags:
        - admin > item
      summary: insertBulkitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Emanuel Oberbrunner
                    description: Bedfordshire
                    image: Stand-alone
                    blockstate: 66901e9e73fe54012d8960a5
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/item/deleteMany:
    post:
      tags:
        - admin > item
      summary: deleteManyitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/item/update/{id}:
    put:
      tags:
        - admin > item
      summary: updateitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Emanuel Oberbrunner
                description: Bedfordshire
                image: Stand-alone
                blockstate: 66901e9e73fe54012d8960a5
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960aa
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-18T13:21:06.597Z'
                  updatedAt: '2025-04-14T02:35:25.210Z'
  /admin/item/partial-update/{id}:
    put:
      tags:
        - admin > item
      summary: partialupdateitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960ab
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-18T13:21:06.597Z'
                  updatedAt: '2025-04-14T02:35:25.210Z'
  /admin/item/softDelete/{id}:
    put:
      tags:
        - admin > item
      summary: softDeleteitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/item/softDeleteMany:
    put:
      tags:
        - admin > item
      summary: softDeleteManyitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/item/updateBulk:
    put:
      tags:
        - admin > item
      summary: updateBulkitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/item/delete/{id}:
    delete:
      tags:
        - admin > item
      summary: deleteitem
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/model/{id}:
    get:
      tags:
        - admin > model
      summary: getmodel
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960bf
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-13T09:59:53.366Z'
                  updatedAt: '2025-01-13T08:55:23.449Z'
  /admin/model/create:
    post:
      tags:
        - admin > model
      summary: addmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Wesley Smith
                ip: 306
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960bd
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-13T09:59:53.366Z'
                  updatedAt: '2025-01-13T08:55:23.449Z'
  /admin/model/list:
    post:
      tags:
        - admin > model
      summary: findAllmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Wesley Smith
                      ip: 306
                      id: 66901e9e73fe54012d8960be
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-05-13T09:59:53.366Z'
                      updatedAt: '2025-01-13T08:55:23.449Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/model/count:
    post:
      tags:
        - admin > model
      summary: getmodelCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/model/addBulk:
    post:
      tags:
        - admin > model
      summary: insertBulkmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Wesley Smith
                    ip: 306
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/model/deleteMany:
    post:
      tags:
        - admin > model
      summary: deleteManymodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/model/update/{id}:
    put:
      tags:
        - admin > model
      summary: updatemodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Wesley Smith
                ip: 306
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960c0
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-13T09:59:53.366Z'
                  updatedAt: '2025-01-13T08:55:23.449Z'
  /admin/model/partial-update/{id}:
    put:
      tags:
        - admin > model
      summary: partialupdatemodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960c1
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-13T09:59:53.366Z'
                  updatedAt: '2025-01-13T08:55:23.449Z'
  /admin/model/softDelete/{id}:
    put:
      tags:
        - admin > model
      summary: softDeletemodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/model/softDeleteMany:
    put:
      tags:
        - admin > model
      summary: softDeleteManymodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/model/updateBulk:
    put:
      tags:
        - admin > model
      summary: updateBulkmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/model/delete/{id}:
    delete:
      tags:
        - admin > model
      summary: deletemodel
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/material/{id}:
    get:
      tags:
        - admin > material
      summary: getmaterial
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960d5
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-15T17:05:47.335Z'
                  updatedAt: '2025-05-08T01:55:34.471Z'
  /admin/material/create:
    post:
      tags:
        - admin > material
      summary: addmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                material:
                  - _id: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960d3
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-15T17:05:47.335Z'
                  updatedAt: '2025-05-08T01:55:34.471Z'
  /admin/material/list:
    post:
      tags:
        - admin > material
      summary: findAllmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - material:
                        - _id: false
                      id: 66901e9e73fe54012d8960d4
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-01-15T17:05:47.335Z'
                      updatedAt: '2025-05-08T01:55:34.471Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/material/count:
    post:
      tags:
        - admin > material
      summary: getmaterialCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/material/addBulk:
    post:
      tags:
        - admin > material
      summary: insertBulkmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - material:
                      - _id: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/material/deleteMany:
    post:
      tags:
        - admin > material
      summary: deleteManymaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/material/update/{id}:
    put:
      tags:
        - admin > material
      summary: updatematerial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                material:
                  - _id: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960d6
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-15T17:05:47.335Z'
                  updatedAt: '2025-05-08T01:55:34.471Z'
  /admin/material/partial-update/{id}:
    put:
      tags:
        - admin > material
      summary: partialupdatematerial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960d7
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-15T17:05:47.335Z'
                  updatedAt: '2025-05-08T01:55:34.471Z'
  /admin/material/softDelete/{id}:
    put:
      tags:
        - admin > material
      summary: softDeletematerial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/material/softDeleteMany:
    put:
      tags:
        - admin > material
      summary: softDeleteManymaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/material/updateBulk:
    put:
      tags:
        - admin > material
      summary: updateBulkmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/material/delete/{id}:
    delete:
      tags:
        - admin > material
      summary: deletematerial
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/blockstate/{id}:
    get:
      tags:
        - admin > blockstate
      summary: getblockstate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960ed
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-24T11:41:34.078Z'
                  updatedAt: '2025-07-07T12:47:23.898Z'
  /admin/blockstate/create:
    post:
      tags:
        - admin > blockstate
      summary: addblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                blockstate: 788
                material: 66901e9e73fe54012d8960e8
                model: 66901e9e73fe54012d8960e9
                name: Janet Ullrich
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960eb
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-24T11:41:34.078Z'
                  updatedAt: '2025-07-07T12:47:23.898Z'
  /admin/blockstate/list:
    post:
      tags:
        - admin > blockstate
      summary: findAllblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - blockstate: 788
                      material: 66901e9e73fe54012d8960e8
                      model: 66901e9e73fe54012d8960e9
                      name: Janet Ullrich
                      id: 66901e9e73fe54012d8960ec
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-07-24T11:41:34.078Z'
                      updatedAt: '2025-07-07T12:47:23.898Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/blockstate/count:
    post:
      tags:
        - admin > blockstate
      summary: getblockstateCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/blockstate/addBulk:
    post:
      tags:
        - admin > blockstate
      summary: insertBulkblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - blockstate: 788
                    material: 66901e9e73fe54012d8960e8
                    model: 66901e9e73fe54012d8960e9
                    name: Janet Ullrich
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/blockstate/deleteMany:
    post:
      tags:
        - admin > blockstate
      summary: deleteManyblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/blockstate/update/{id}:
    put:
      tags:
        - admin > blockstate
      summary: updateblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                blockstate: 788
                material: 66901e9e73fe54012d8960e8
                model: 66901e9e73fe54012d8960e9
                name: Janet Ullrich
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960ee
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-24T11:41:34.078Z'
                  updatedAt: '2025-07-07T12:47:23.898Z'
  /admin/blockstate/partial-update/{id}:
    put:
      tags:
        - admin > blockstate
      summary: partialupdateblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960ef
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-24T11:41:34.078Z'
                  updatedAt: '2025-07-07T12:47:23.898Z'
  /admin/blockstate/softDelete/{id}:
    put:
      tags:
        - admin > blockstate
      summary: softDeleteblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/blockstate/softDeleteMany:
    put:
      tags:
        - admin > blockstate
      summary: softDeleteManyblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/blockstate/updateBulk:
    put:
      tags:
        - admin > blockstate
      summary: updateBulkblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/blockstate/delete/{id}:
    delete:
      tags:
        - admin > blockstate
      summary: deleteblockstate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/planet/{id}:
    get:
      tags:
        - admin > planet
      summary: getplanet
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d896104
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-23T15:27:32.012Z'
                  updatedAt: '2024-11-08T11:57:43.778Z'
  /admin/planet/create:
    post:
      tags:
        - admin > planet
      summary: addplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                universe: 66901e9e73fe54012d896100
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d896102
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-23T15:27:32.012Z'
                  updatedAt: '2024-11-08T11:57:43.778Z'
  /admin/planet/list:
    post:
      tags:
        - admin > planet
      summary: findAllplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - universe: 66901e9e73fe54012d896100
                      id: 66901e9e73fe54012d896103
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-01-23T15:27:32.012Z'
                      updatedAt: '2024-11-08T11:57:43.778Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/planet/count:
    post:
      tags:
        - admin > planet
      summary: getplanetCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/planet/addBulk:
    post:
      tags:
        - admin > planet
      summary: insertBulkplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - universe: 66901e9e73fe54012d896100
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/planet/deleteMany:
    post:
      tags:
        - admin > planet
      summary: deleteManyplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/planet/update/{id}:
    put:
      tags:
        - admin > planet
      summary: updateplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                universe: 66901e9e73fe54012d896100
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d896105
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-23T15:27:32.012Z'
                  updatedAt: '2024-11-08T11:57:43.778Z'
  /admin/planet/partial-update/{id}:
    put:
      tags:
        - admin > planet
      summary: partialupdateplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d896106
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-23T15:27:32.012Z'
                  updatedAt: '2024-11-08T11:57:43.778Z'
  /admin/planet/softDelete/{id}:
    put:
      tags:
        - admin > planet
      summary: softDeleteplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/planet/softDeleteMany:
    put:
      tags:
        - admin > planet
      summary: softDeleteManyplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/planet/updateBulk:
    put:
      tags:
        - admin > planet
      summary: updateBulkplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/planet/delete/{id}:
    delete:
      tags:
        - admin > planet
      summary: deleteplanet
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/cluster/{id}:
    get:
      tags:
        - admin > cluster
      summary: getcluster
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d89611b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-10T08:57:12.692Z'
                  updatedAt: '2024-08-25T04:58:16.192Z'
  /admin/cluster/create:
    post:
      tags:
        - admin > cluster
      summary: addcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                planet: 66901e9e73fe54012d896117
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d896119
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-10T08:57:12.692Z'
                  updatedAt: '2024-08-25T04:58:16.192Z'
  /admin/cluster/list:
    post:
      tags:
        - admin > cluster
      summary: findAllcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - planet: 66901e9e73fe54012d896117
                      id: 66901e9e73fe54012d89611a
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-10-10T08:57:12.692Z'
                      updatedAt: '2024-08-25T04:58:16.192Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/cluster/count:
    post:
      tags:
        - admin > cluster
      summary: getclusterCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/cluster/addBulk:
    post:
      tags:
        - admin > cluster
      summary: insertBulkcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - planet: 66901e9e73fe54012d896117
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/cluster/deleteMany:
    post:
      tags:
        - admin > cluster
      summary: deleteManycluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/cluster/update/{id}:
    put:
      tags:
        - admin > cluster
      summary: updatecluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                planet: 66901e9e73fe54012d896117
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d89611c
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-10T08:57:12.692Z'
                  updatedAt: '2024-08-25T04:58:16.192Z'
  /admin/cluster/partial-update/{id}:
    put:
      tags:
        - admin > cluster
      summary: partialupdatecluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d89611d
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-10T08:57:12.692Z'
                  updatedAt: '2024-08-25T04:58:16.192Z'
  /admin/cluster/softDelete/{id}:
    put:
      tags:
        - admin > cluster
      summary: softDeletecluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/cluster/softDeleteMany:
    put:
      tags:
        - admin > cluster
      summary: softDeleteManycluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/cluster/updateBulk:
    put:
      tags:
        - admin > cluster
      summary: updateBulkcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/cluster/delete/{id}:
    delete:
      tags:
        - admin > cluster
      summary: deletecluster
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/chunk/{id}:
    get:
      tags:
        - admin > chunk
      summary: getchunk
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d896133
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-25T14:31:30.786Z'
                  updatedAt: '2025-06-28T14:43:48.037Z'
  /admin/chunk/create:
    post:
      tags:
        - admin > chunk
      summary: addchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cluster: 66901e9e73fe54012d89612e
                chunkdata:
                  - _id: false
                    l: 462
                    storage: true
                    ridybody: false
                blockstate:
                  - _id: false
                    x: 103
                    'y': 132
                    z: 546
                    c: 917
                chat: 66901e9e73fe54012d89612f
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d896131
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-25T14:31:30.786Z'
                  updatedAt: '2025-06-28T14:43:48.037Z'
  /admin/chunk/list:
    post:
      tags:
        - admin > chunk
      summary: findAllchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - cluster: 66901e9e73fe54012d89612e
                      chunkdata:
                        - _id: false
                          l: 462
                          storage: true
                          ridybody: false
                      blockstate:
                        - _id: false
                          x: 103
                          'y': 132
                          z: 546
                          c: 917
                      chat: 66901e9e73fe54012d89612f
                      id: 66901e9e73fe54012d896132
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-04-25T14:31:30.786Z'
                      updatedAt: '2025-06-28T14:43:48.037Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/chunk/count:
    post:
      tags:
        - admin > chunk
      summary: getchunkCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/chunk/addBulk:
    post:
      tags:
        - admin > chunk
      summary: insertBulkchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - cluster: 66901e9e73fe54012d89612e
                    chunkdata:
                      - _id: false
                        l: 462
                        storage: true
                        ridybody: false
                    blockstate:
                      - _id: false
                        x: 103
                        'y': 132
                        z: 546
                        c: 917
                    chat: 66901e9e73fe54012d89612f
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chunk/deleteMany:
    post:
      tags:
        - admin > chunk
      summary: deleteManychunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chunk/update/{id}:
    put:
      tags:
        - admin > chunk
      summary: updatechunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cluster: 66901e9e73fe54012d89612e
                chunkdata:
                  - _id: false
                    l: 462
                    storage: true
                    ridybody: false
                blockstate:
                  - _id: false
                    x: 103
                    'y': 132
                    z: 546
                    c: 917
                chat: 66901e9e73fe54012d89612f
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d896134
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-25T14:31:30.786Z'
                  updatedAt: '2025-06-28T14:43:48.037Z'
  /admin/chunk/partial-update/{id}:
    put:
      tags:
        - admin > chunk
      summary: partialupdatechunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d896135
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-25T14:31:30.786Z'
                  updatedAt: '2025-06-28T14:43:48.037Z'
  /admin/chunk/softDelete/{id}:
    put:
      tags:
        - admin > chunk
      summary: softDeletechunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chunk/softDeleteMany:
    put:
      tags:
        - admin > chunk
      summary: softDeleteManychunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chunk/updateBulk:
    put:
      tags:
        - admin > chunk
      summary: updateBulkchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/chunk/delete/{id}:
    delete:
      tags:
        - admin > chunk
      summary: deletechunk
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/universe/{id}:
    get:
      tags:
        - admin > universe
      summary: getuniverse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d896149
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-07T01:03:54.456Z'
                  updatedAt: '2025-03-09T01:46:02.304Z'
  /admin/universe/create:
    post:
      tags:
        - admin > universe
      summary: adduniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Mario Davis
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d896147
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-07T01:03:54.456Z'
                  updatedAt: '2025-03-09T01:46:02.304Z'
  /admin/universe/list:
    post:
      tags:
        - admin > universe
      summary: findAlluniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Mario Davis
                      id: 66901e9e73fe54012d896148
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-09-07T01:03:54.456Z'
                      updatedAt: '2025-03-09T01:46:02.304Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/universe/count:
    post:
      tags:
        - admin > universe
      summary: getuniverseCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/universe/addBulk:
    post:
      tags:
        - admin > universe
      summary: insertBulkuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Mario Davis
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/universe/deleteMany:
    post:
      tags:
        - admin > universe
      summary: deleteManyuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/universe/update/{id}:
    put:
      tags:
        - admin > universe
      summary: updateuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Mario Davis
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d89614a
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-07T01:03:54.456Z'
                  updatedAt: '2025-03-09T01:46:02.304Z'
  /admin/universe/partial-update/{id}:
    put:
      tags:
        - admin > universe
      summary: partialupdateuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d89614b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-07T01:03:54.456Z'
                  updatedAt: '2025-03-09T01:46:02.304Z'
  /admin/universe/softDelete/{id}:
    put:
      tags:
        - admin > universe
      summary: softDeleteuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/universe/softDeleteMany:
    put:
      tags:
        - admin > universe
      summary: softDeleteManyuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/universe/updateBulk:
    put:
      tags:
        - admin > universe
      summary: updateBulkuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/universe/delete/{id}:
    delete:
      tags:
        - admin > universe
      summary: deleteuniverse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/user/{id}:
    get:
      tags:
        - admin > user
      summary: getuser
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d89615f
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-30T12:43:35.179Z'
                  updatedAt: '2024-07-15T04:33:42.053Z'
  /admin/user/me:
    get:
      tags:
        - admin > user
      summary: get loggedin User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896165
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-30T12:43:35.179Z'
                  updatedAt: '2024-07-15T04:33:42.053Z'
  /admin/user/create:
    post:
      tags:
        - admin > user
      summary: adduser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d89615d
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-30T12:43:35.179Z'
                  updatedAt: '2024-07-15T04:33:42.053Z'
  /admin/user/list:
    post:
      tags:
        - admin > user
      summary: findAlluser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - username: Keith_Kozey76
                      email: Nannie.Spencer68@hotmail.com
                      name: Darlene Wisoky DVM
                      data:
                        - _id: false
                          section: Nebraska
                      mobileNo: (365) 861-0519
                      userType: 1
                      id: 66901e9e73fe54012d89615e
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-07-30T12:43:35.179Z'
                      updatedAt: '2024-07-15T04:33:42.053Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/user/count:
    post:
      tags:
        - admin > user
      summary: getuserCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/user/addBulk:
    post:
      tags:
        - admin > user
      summary: insertBulkuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - username: Keith_Kozey76
                    password: aWJya7CBhAMGbia
                    email: Nannie.Spencer68@hotmail.com
                    name: Darlene Wisoky DVM
                    data:
                      - _id: false
                        section: Nebraska
                    mobileNo: (365) 861-0519
                    userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/deleteMany:
    post:
      tags:
        - admin > user
      summary: deleteManyuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/update/{id}:
    put:
      tags:
        - admin > user
      summary: updateuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896160
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-30T12:43:35.179Z'
                  updatedAt: '2024-07-15T04:33:42.053Z'
  /admin/user/partial-update/{id}:
    put:
      tags:
        - admin > user
      summary: partialupdateuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896161
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-30T12:43:35.179Z'
                  updatedAt: '2024-07-15T04:33:42.053Z'
  /admin/user/softDelete/{id}:
    put:
      tags:
        - admin > user
      summary: softDeleteuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/softDeleteMany:
    put:
      tags:
        - admin > user
      summary: softDeleteManyuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/updateBulk:
    put:
      tags:
        - admin > user
      summary: updateBulkuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/user/update-profile:
    put:
      tags:
        - admin > user
      summary: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896164
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-30T12:43:35.179Z'
                  updatedAt: '2024-07-15T04:33:42.053Z'
  /admin/user/delete/{id}:
    delete:
      tags:
        - admin > user
      summary: deleteuser
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/auth/login:
    post:
      tags:
        - admin > login
      summary: Login in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: username
                password: password
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  id: 66901e9e73fe54012d896166
                  loginRetryLimit: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWRlZDVjMGFjMjAxMmFjMDI4ODkxZiIsInVzZXJuYW1lIjoiYWRtaW4iLCJpYXQiOjE2MjkzNTEyNzAsImV4cCI6MTYyOTk1MTI3MH0.BJ-WKjNYeFDQ4pn8kfli5gwn6GLz_c3voFht20Agj9k
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-21T10:27:17.044Z'
                  updatedAt: '2025-04-12T23:44:08.830Z'
  /admin/auth/register:
    post:
      tags:
        - admin > login
      summary: Register User in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  id: 66901e9e73fe54012d896166
                  loginRetryLimit: 0
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-21T10:27:17.044Z'
                  updatedAt: '2025-04-12T23:44:08.830Z'
  /admin/auth/forgot-password:
    post:
      tags:
        - admin > login
      summary: Forgot Password in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: yourmail@gmail.com
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: otp successfully send to your email.
                data: {}
  /admin/auth/validate-otp:
    post:
      tags:
        - admin > login
      summary: Validate OTP in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp: '5898'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Invalid OTP
                data: {}
  /admin/auth/logout:
    post:
      tags:
        - admin > login
      summary: Logout in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/user/change-password:
    put:
      tags:
        - admin > login
      summary: Change Password in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                oldPassword: OldPassword
                newPassword: NewPassword
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password changed successfully
                data: {}
  /admin/auth/reset-password:
    put:
      tags:
        - admin > login
      summary: Reset password in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                code: '5898'
                newPassword: yourPassword
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password reset successfully
                data: {}
  /admin/role/{id}:
    get:
      tags:
        - admin > role
      summary: getrole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Leah Kerluke
                  code: cross-platform
                  weight: 512
                  id: 66901e9e73fe54012d896186
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-02T16:09:04.073Z'
                  updatedAt: '2025-03-17T15:21:33.310Z'
  /admin/role/create:
    post:
      tags:
        - admin > role
      summary: addrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Leah Kerluke
                code: cross-platform
                weight: 512
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Leah Kerluke
                  code: cross-platform
                  weight: 512
                  id: 66901e9e73fe54012d896180
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-02T16:09:04.073Z'
                  updatedAt: '2025-03-17T15:21:33.310Z'
  /admin/role/addBulk:
    post:
      tags:
        - admin > role
      summary: insertBulkrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Leah Kerluke
                    code: cross-platform
                    weight: 512
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/list:
    post:
      tags:
        - admin > role
      summary: findAllrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Leah Kerluke
                      code: cross-platform
                      weight: 512
                      id: 66901e9e73fe54012d896182
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-07-02T16:09:04.073Z'
                      updatedAt: '2025-03-17T15:21:33.310Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/role/count:
    post:
      tags:
        - admin > role
      summary: getroleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/role/deleteMany:
    post:
      tags:
        - admin > role
      summary: deleteManyrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/updateBulk:
    put:
      tags:
        - admin > role
      summary: updateBulkrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/softDeleteMany:
    put:
      tags:
        - admin > role
      summary: softDeleteManyrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/softDelete/{id}:
    put:
      tags:
        - admin > role
      summary: softDeleterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/partial-update/{id}:
    put:
      tags:
        - admin > role
      summary: partialupdaterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Leah Kerluke
                  code: cross-platform
                  weight: 512
                  id: 66901e9e73fe54012d896184
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-02T16:09:04.073Z'
                  updatedAt: '2025-03-17T15:21:33.310Z'
  /admin/role/update/{id}:
    put:
      tags:
        - admin > role
      summary: updaterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Leah Kerluke
                code: cross-platform
                weight: 512
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Leah Kerluke
                  code: cross-platform
                  weight: 512
                  id: 66901e9e73fe54012d896185
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-07-02T16:09:04.073Z'
                  updatedAt: '2025-03-17T15:21:33.310Z'
  /admin/role/delete/{id}:
    delete:
      tags:
        - admin > role
      summary: deleterole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/projectroute/{id}:
    get:
      tags:
        - admin > projectRoute
      summary: getprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: leading-edge
                  method: Direct
                  uri: online
                  id: 66901e9e73fe54012d89618e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-06T03:09:40.490Z'
                  updatedAt: '2024-09-04T22:38:02.515Z'
  /admin/projectroute/create:
    post:
      tags:
        - admin > projectRoute
      summary: addprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                route_name: leading-edge
                method: Direct
                uri: online
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: leading-edge
                  method: Direct
                  uri: online
                  id: 66901e9e73fe54012d896188
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-06T03:09:40.490Z'
                  updatedAt: '2024-09-04T22:38:02.515Z'
  /admin/projectroute/addBulk:
    post:
      tags:
        - admin > projectRoute
      summary: insertBulkprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - route_name: leading-edge
                    method: Direct
                    uri: online
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/list:
    post:
      tags:
        - admin > projectRoute
      summary: findAllprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - route_name: leading-edge
                      method: Direct
                      uri: online
                      id: 66901e9e73fe54012d89618a
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-06-06T03:09:40.490Z'
                      updatedAt: '2024-09-04T22:38:02.515Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/projectroute/count:
    post:
      tags:
        - admin > projectRoute
      summary: getprojectRouteCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/projectroute/deleteMany:
    post:
      tags:
        - admin > projectRoute
      summary: deleteManyprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/updateBulk:
    put:
      tags:
        - admin > projectRoute
      summary: updateBulkprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/softDeleteMany:
    put:
      tags:
        - admin > projectRoute
      summary: softDeleteManyprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/softDelete/{id}:
    put:
      tags:
        - admin > projectRoute
      summary: softDeleteprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/partial-update/{id}:
    put:
      tags:
        - admin > projectRoute
      summary: partialupdateprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: leading-edge
                  method: Direct
                  uri: online
                  id: 66901e9e73fe54012d89618c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-06T03:09:40.490Z'
                  updatedAt: '2024-09-04T22:38:02.515Z'
  /admin/projectroute/update/{id}:
    put:
      tags:
        - admin > projectRoute
      summary: updateprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                route_name: leading-edge
                method: Direct
                uri: online
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: leading-edge
                  method: Direct
                  uri: online
                  id: 66901e9e73fe54012d89618d
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-06T03:09:40.490Z'
                  updatedAt: '2024-09-04T22:38:02.515Z'
  /admin/projectroute/delete/{id}:
    delete:
      tags:
        - admin > projectRoute
      summary: deleteprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/routerole/{id}:
    get:
      tags:
        - admin > routeRole
      summary: getrouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 66901e9e73fe54012d89618f
                  roleId: 66901e9e73fe54012d896190
                  id: 66901e9e73fe54012d896198
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-25T14:27:56.426Z'
                  updatedAt: '2024-12-21T09:43:26.696Z'
  /admin/routerole/create:
    post:
      tags:
        - admin > routeRole
      summary: addrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routeId: 66901e9e73fe54012d89618f
                roleId: 66901e9e73fe54012d896190
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 66901e9e73fe54012d89618f
                  roleId: 66901e9e73fe54012d896190
                  id: 66901e9e73fe54012d896192
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-25T14:27:56.426Z'
                  updatedAt: '2024-12-21T09:43:26.696Z'
  /admin/routerole/addBulk:
    post:
      tags:
        - admin > routeRole
      summary: insertBulkrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - routeId: 66901e9e73fe54012d89618f
                    roleId: 66901e9e73fe54012d896190
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/list:
    post:
      tags:
        - admin > routeRole
      summary: findAllrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - routeId: 66901e9e73fe54012d89618f
                      roleId: 66901e9e73fe54012d896190
                      id: 66901e9e73fe54012d896194
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-05-25T14:27:56.426Z'
                      updatedAt: '2024-12-21T09:43:26.696Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/routerole/count:
    post:
      tags:
        - admin > routeRole
      summary: getrouteRoleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/routerole/deleteMany:
    post:
      tags:
        - admin > routeRole
      summary: deleteManyrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/updateBulk:
    put:
      tags:
        - admin > routeRole
      summary: updateBulkrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/softDeleteMany:
    put:
      tags:
        - admin > routeRole
      summary: softDeleteManyrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/softDelete/{id}:
    put:
      tags:
        - admin > routeRole
      summary: softDeleterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/partial-update/{id}:
    put:
      tags:
        - admin > routeRole
      summary: partialupdaterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 66901e9e73fe54012d89618f
                  roleId: 66901e9e73fe54012d896190
                  id: 66901e9e73fe54012d896196
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-25T14:27:56.426Z'
                  updatedAt: '2024-12-21T09:43:26.696Z'
  /admin/routerole/update/{id}:
    put:
      tags:
        - admin > routeRole
      summary: updaterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routeId: 66901e9e73fe54012d89618f
                roleId: 66901e9e73fe54012d896190
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 66901e9e73fe54012d89618f
                  roleId: 66901e9e73fe54012d896190
                  id: 66901e9e73fe54012d896197
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-25T14:27:56.426Z'
                  updatedAt: '2024-12-21T09:43:26.696Z'
  /admin/routerole/delete/{id}:
    delete:
      tags:
        - admin > routeRole
      summary: deleterouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/userrole/{id}:
    get:
      tags:
        - admin > userRole
      summary: getuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 66901e9e73fe54012d896199
                  roleId: 66901e9e73fe54012d89619a
                  id: 66901e9e73fe54012d8961a2
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-30T22:20:29.983Z'
                  updatedAt: '2024-07-29T23:09:21.978Z'
  /admin/userrole/create:
    post:
      tags:
        - admin > userRole
      summary: adduserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 66901e9e73fe54012d896199
                roleId: 66901e9e73fe54012d89619a
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 66901e9e73fe54012d896199
                  roleId: 66901e9e73fe54012d89619a
                  id: 66901e9e73fe54012d89619c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-30T22:20:29.983Z'
                  updatedAt: '2024-07-29T23:09:21.978Z'
  /admin/userrole/addBulk:
    post:
      tags:
        - admin > userRole
      summary: insertBulkuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - userId: 66901e9e73fe54012d896199
                    roleId: 66901e9e73fe54012d89619a
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/list:
    post:
      tags:
        - admin > userRole
      summary: findAlluserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - userId: 66901e9e73fe54012d896199
                      roleId: 66901e9e73fe54012d89619a
                      id: 66901e9e73fe54012d89619e
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-03-30T22:20:29.983Z'
                      updatedAt: '2024-07-29T23:09:21.978Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/userrole/count:
    post:
      tags:
        - admin > userRole
      summary: getuserRoleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/userrole/deleteMany:
    post:
      tags:
        - admin > userRole
      summary: deleteManyuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/updateBulk:
    put:
      tags:
        - admin > userRole
      summary: updateBulkuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/softDeleteMany:
    put:
      tags:
        - admin > userRole
      summary: softDeleteManyuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/softDelete/{id}:
    put:
      tags:
        - admin > userRole
      summary: softDeleteuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/partial-update/{id}:
    put:
      tags:
        - admin > userRole
      summary: partialupdateuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 66901e9e73fe54012d896199
                  roleId: 66901e9e73fe54012d89619a
                  id: 66901e9e73fe54012d8961a0
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-30T22:20:29.983Z'
                  updatedAt: '2024-07-29T23:09:21.978Z'
  /admin/userrole/update/{id}:
    put:
      tags:
        - admin > userRole
      summary: updateuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 66901e9e73fe54012d896199
                roleId: 66901e9e73fe54012d89619a
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 66901e9e73fe54012d896199
                  roleId: 66901e9e73fe54012d89619a
                  id: 66901e9e73fe54012d8961a1
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-30T22:20:29.983Z'
                  updatedAt: '2024-07-29T23:09:21.978Z'
  /admin/userrole/delete/{id}:
    delete:
      tags:
        - admin > userRole
      summary: deleteuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/chat_group/{id}:
    get:
      tags:
        - device > Chat_group
      summary: getChat_group
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d896082
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-08T09:32:46.773Z'
                  updatedAt: '2025-02-09T12:18:41.758Z'
  /device/api/v1/chat_group/create:
    post:
      tags:
        - device > Chat_group
      summary: addChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Grant Wolff
                code: web-enabled
                admin: cutting-edge
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d896080
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-08T09:32:46.773Z'
                  updatedAt: '2025-02-09T12:18:41.758Z'
  /device/api/v1/chat_group/list:
    post:
      tags:
        - device > Chat_group
      summary: findAllChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Grant Wolff
                      code: web-enabled
                      admin: cutting-edge
                      id: 66901e9e73fe54012d896081
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-04-08T09:32:46.773Z'
                      updatedAt: '2025-02-09T12:18:41.758Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/chat_group/count:
    post:
      tags:
        - device > Chat_group
      summary: getChat_groupCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/chat_group/addBulk:
    post:
      tags:
        - device > Chat_group
      summary: insertBulkChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Grant Wolff
                    code: web-enabled
                    admin: cutting-edge
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_group/deleteMany:
    post:
      tags:
        - device > Chat_group
      summary: deleteManyChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_group/update/{id}:
    put:
      tags:
        - device > Chat_group
      summary: updateChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Grant Wolff
                code: web-enabled
                admin: cutting-edge
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d896083
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-08T09:32:46.773Z'
                  updatedAt: '2025-02-09T12:18:41.758Z'
  /device/api/v1/chat_group/partial-update/{id}:
    put:
      tags:
        - device > Chat_group
      summary: partialupdateChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d896084
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-04-08T09:32:46.773Z'
                  updatedAt: '2025-02-09T12:18:41.758Z'
  /device/api/v1/chat_group/softDelete/{id}:
    put:
      tags:
        - device > Chat_group
      summary: softDeleteChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_group/softDeleteMany:
    put:
      tags:
        - device > Chat_group
      summary: softDeleteManyChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_group/updateBulk:
    put:
      tags:
        - device > Chat_group
      summary: updateBulkChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_group/delete/{id}:
    delete:
      tags:
        - device > Chat_group
      summary: deleteChat_group
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/upload:
    post:
      tags:
        - device > File Upload
      summary: File upload in device
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Select file/s to upload
                  format: binary
                folder:
                  type: string
                  description: Optional, enable to upload file to specific folder
                  example: Enter foldername
                fileName:
                  type: string
                  description: Optional, enable to give Specific file name to uploaded File
                  example: Enter fileName
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: path to download file
  /device/api/v1/chat_message/{id}:
    get:
      tags:
        - device > Chat_message
      summary: getChat_message
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d896099
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-27T13:04:47.150Z'
                  updatedAt: '2025-05-05T20:48:31.948Z'
  /device/api/v1/chat_message/create:
    post:
      tags:
        - device > Chat_message
      summary: addChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: invoice
                sender: open
                recipient: Direct
                groupId: 66901e9e73fe54012d89608e
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d896097
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-27T13:04:47.150Z'
                  updatedAt: '2025-05-05T20:48:31.948Z'
  /device/api/v1/chat_message/list:
    post:
      tags:
        - device > Chat_message
      summary: findAllChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - message: invoice
                      sender: open
                      recipient: Direct
                      groupId: 66901e9e73fe54012d89608e
                      id: 66901e9e73fe54012d896098
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-10-27T13:04:47.150Z'
                      updatedAt: '2025-05-05T20:48:31.948Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/chat_message/count:
    post:
      tags:
        - device > Chat_message
      summary: getChat_messageCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/chat_message/addBulk:
    post:
      tags:
        - device > Chat_message
      summary: insertBulkChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - message: invoice
                    sender: open
                    recipient: Direct
                    groupId: 66901e9e73fe54012d89608e
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_message/deleteMany:
    post:
      tags:
        - device > Chat_message
      summary: deleteManyChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_message/update/{id}:
    put:
      tags:
        - device > Chat_message
      summary: updateChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: invoice
                sender: open
                recipient: Direct
                groupId: 66901e9e73fe54012d89608e
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d89609a
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-27T13:04:47.150Z'
                  updatedAt: '2025-05-05T20:48:31.948Z'
  /device/api/v1/chat_message/partial-update/{id}:
    put:
      tags:
        - device > Chat_message
      summary: partialupdateChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d89609b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-27T13:04:47.150Z'
                  updatedAt: '2025-05-05T20:48:31.948Z'
  /device/api/v1/chat_message/softDelete/{id}:
    put:
      tags:
        - device > Chat_message
      summary: softDeleteChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_message/softDeleteMany:
    put:
      tags:
        - device > Chat_message
      summary: softDeleteManyChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_message/updateBulk:
    put:
      tags:
        - device > Chat_message
      summary: updateBulkChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chat_message/delete/{id}:
    delete:
      tags:
        - device > Chat_message
      summary: deleteChat_message
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/item/{id}:
    get:
      tags:
        - device > item
      summary: getitem
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960b0
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-04T21:47:46.394Z'
                  updatedAt: '2024-11-05T13:26:31.126Z'
  /device/api/v1/item/create:
    post:
      tags:
        - device > item
      summary: additem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Emanuel Oberbrunner
                description: Bedfordshire
                image: Stand-alone
                blockstate: 66901e9e73fe54012d8960a5
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960ae
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-04T21:47:46.394Z'
                  updatedAt: '2024-11-05T13:26:31.126Z'
  /device/api/v1/item/list:
    post:
      tags:
        - device > item
      summary: findAllitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Emanuel Oberbrunner
                      description: Bedfordshire
                      image: Stand-alone
                      blockstate: 66901e9e73fe54012d8960a5
                      id: 66901e9e73fe54012d8960af
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-08-04T21:47:46.394Z'
                      updatedAt: '2024-11-05T13:26:31.126Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/item/count:
    post:
      tags:
        - device > item
      summary: getitemCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/item/addBulk:
    post:
      tags:
        - device > item
      summary: insertBulkitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Emanuel Oberbrunner
                    description: Bedfordshire
                    image: Stand-alone
                    blockstate: 66901e9e73fe54012d8960a5
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/item/deleteMany:
    post:
      tags:
        - device > item
      summary: deleteManyitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/item/update/{id}:
    put:
      tags:
        - device > item
      summary: updateitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Emanuel Oberbrunner
                description: Bedfordshire
                image: Stand-alone
                blockstate: 66901e9e73fe54012d8960a5
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960b1
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-04T21:47:46.394Z'
                  updatedAt: '2024-11-05T13:26:31.126Z'
  /device/api/v1/item/partial-update/{id}:
    put:
      tags:
        - device > item
      summary: partialupdateitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960b2
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-04T21:47:46.394Z'
                  updatedAt: '2024-11-05T13:26:31.126Z'
  /device/api/v1/item/softDelete/{id}:
    put:
      tags:
        - device > item
      summary: softDeleteitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/item/softDeleteMany:
    put:
      tags:
        - device > item
      summary: softDeleteManyitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/item/updateBulk:
    put:
      tags:
        - device > item
      summary: updateBulkitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/item/delete/{id}:
    delete:
      tags:
        - device > item
      summary: deleteitem
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/model/{id}:
    get:
      tags:
        - device > model
      summary: getmodel
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960c6
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-07T16:46:58.625Z'
                  updatedAt: '2024-12-29T22:23:35.193Z'
  /device/api/v1/model/create:
    post:
      tags:
        - device > model
      summary: addmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Wesley Smith
                ip: 306
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960c4
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-07T16:46:58.625Z'
                  updatedAt: '2024-12-29T22:23:35.193Z'
  /device/api/v1/model/list:
    post:
      tags:
        - device > model
      summary: findAllmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Wesley Smith
                      ip: 306
                      id: 66901e9e73fe54012d8960c5
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-06-07T16:46:58.625Z'
                      updatedAt: '2024-12-29T22:23:35.193Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/model/count:
    post:
      tags:
        - device > model
      summary: getmodelCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/model/addBulk:
    post:
      tags:
        - device > model
      summary: insertBulkmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Wesley Smith
                    ip: 306
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/model/deleteMany:
    post:
      tags:
        - device > model
      summary: deleteManymodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/model/update/{id}:
    put:
      tags:
        - device > model
      summary: updatemodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Wesley Smith
                ip: 306
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960c7
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-07T16:46:58.625Z'
                  updatedAt: '2024-12-29T22:23:35.193Z'
  /device/api/v1/model/partial-update/{id}:
    put:
      tags:
        - device > model
      summary: partialupdatemodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960c8
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-07T16:46:58.625Z'
                  updatedAt: '2024-12-29T22:23:35.193Z'
  /device/api/v1/model/softDelete/{id}:
    put:
      tags:
        - device > model
      summary: softDeletemodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/model/softDeleteMany:
    put:
      tags:
        - device > model
      summary: softDeleteManymodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/model/updateBulk:
    put:
      tags:
        - device > model
      summary: updateBulkmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/model/delete/{id}:
    delete:
      tags:
        - device > model
      summary: deletemodel
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/material/{id}:
    get:
      tags:
        - device > material
      summary: getmaterial
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960dc
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-12-27T20:58:20.005Z'
                  updatedAt: '2024-10-26T18:21:06.820Z'
  /device/api/v1/material/create:
    post:
      tags:
        - device > material
      summary: addmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                material:
                  - _id: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960da
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-12-27T20:58:20.005Z'
                  updatedAt: '2024-10-26T18:21:06.820Z'
  /device/api/v1/material/list:
    post:
      tags:
        - device > material
      summary: findAllmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - material:
                        - _id: false
                      id: 66901e9e73fe54012d8960db
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-12-27T20:58:20.005Z'
                      updatedAt: '2024-10-26T18:21:06.820Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/material/count:
    post:
      tags:
        - device > material
      summary: getmaterialCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/material/addBulk:
    post:
      tags:
        - device > material
      summary: insertBulkmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - material:
                      - _id: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/material/deleteMany:
    post:
      tags:
        - device > material
      summary: deleteManymaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/material/update/{id}:
    put:
      tags:
        - device > material
      summary: updatematerial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                material:
                  - _id: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960dd
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-12-27T20:58:20.005Z'
                  updatedAt: '2024-10-26T18:21:06.820Z'
  /device/api/v1/material/partial-update/{id}:
    put:
      tags:
        - device > material
      summary: partialupdatematerial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960de
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-12-27T20:58:20.005Z'
                  updatedAt: '2024-10-26T18:21:06.820Z'
  /device/api/v1/material/softDelete/{id}:
    put:
      tags:
        - device > material
      summary: softDeletematerial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/material/softDeleteMany:
    put:
      tags:
        - device > material
      summary: softDeleteManymaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/material/updateBulk:
    put:
      tags:
        - device > material
      summary: updateBulkmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/material/delete/{id}:
    delete:
      tags:
        - device > material
      summary: deletematerial
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/blockstate/{id}:
    get:
      tags:
        - device > blockstate
      summary: getblockstate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960f4
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-08T16:10:11.178Z'
                  updatedAt: '2025-05-13T04:49:03.986Z'
  /device/api/v1/blockstate/create:
    post:
      tags:
        - device > blockstate
      summary: addblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                blockstate: 788
                material: 66901e9e73fe54012d8960e8
                model: 66901e9e73fe54012d8960e9
                name: Janet Ullrich
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960f2
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-08T16:10:11.178Z'
                  updatedAt: '2025-05-13T04:49:03.986Z'
  /device/api/v1/blockstate/list:
    post:
      tags:
        - device > blockstate
      summary: findAllblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - blockstate: 788
                      material: 66901e9e73fe54012d8960e8
                      model: 66901e9e73fe54012d8960e9
                      name: Janet Ullrich
                      id: 66901e9e73fe54012d8960f3
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-10-08T16:10:11.178Z'
                      updatedAt: '2025-05-13T04:49:03.986Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/blockstate/count:
    post:
      tags:
        - device > blockstate
      summary: getblockstateCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/blockstate/addBulk:
    post:
      tags:
        - device > blockstate
      summary: insertBulkblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - blockstate: 788
                    material: 66901e9e73fe54012d8960e8
                    model: 66901e9e73fe54012d8960e9
                    name: Janet Ullrich
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/blockstate/deleteMany:
    post:
      tags:
        - device > blockstate
      summary: deleteManyblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/blockstate/update/{id}:
    put:
      tags:
        - device > blockstate
      summary: updateblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                blockstate: 788
                material: 66901e9e73fe54012d8960e8
                model: 66901e9e73fe54012d8960e9
                name: Janet Ullrich
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960f5
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-08T16:10:11.178Z'
                  updatedAt: '2025-05-13T04:49:03.986Z'
  /device/api/v1/blockstate/partial-update/{id}:
    put:
      tags:
        - device > blockstate
      summary: partialupdateblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960f6
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-08T16:10:11.178Z'
                  updatedAt: '2025-05-13T04:49:03.986Z'
  /device/api/v1/blockstate/softDelete/{id}:
    put:
      tags:
        - device > blockstate
      summary: softDeleteblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/blockstate/softDeleteMany:
    put:
      tags:
        - device > blockstate
      summary: softDeleteManyblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/blockstate/updateBulk:
    put:
      tags:
        - device > blockstate
      summary: updateBulkblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/blockstate/delete/{id}:
    delete:
      tags:
        - device > blockstate
      summary: deleteblockstate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/planet/{id}:
    get:
      tags:
        - device > planet
      summary: getplanet
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d89610b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-20T03:55:12.390Z'
                  updatedAt: '2024-09-13T05:44:39.843Z'
  /device/api/v1/planet/create:
    post:
      tags:
        - device > planet
      summary: addplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                universe: 66901e9e73fe54012d896100
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d896109
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-20T03:55:12.390Z'
                  updatedAt: '2024-09-13T05:44:39.843Z'
  /device/api/v1/planet/list:
    post:
      tags:
        - device > planet
      summary: findAllplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - universe: 66901e9e73fe54012d896100
                      id: 66901e9e73fe54012d89610a
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-11-20T03:55:12.390Z'
                      updatedAt: '2024-09-13T05:44:39.843Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/planet/count:
    post:
      tags:
        - device > planet
      summary: getplanetCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/planet/addBulk:
    post:
      tags:
        - device > planet
      summary: insertBulkplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - universe: 66901e9e73fe54012d896100
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/planet/deleteMany:
    post:
      tags:
        - device > planet
      summary: deleteManyplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/planet/update/{id}:
    put:
      tags:
        - device > planet
      summary: updateplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                universe: 66901e9e73fe54012d896100
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d89610c
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-20T03:55:12.390Z'
                  updatedAt: '2024-09-13T05:44:39.843Z'
  /device/api/v1/planet/partial-update/{id}:
    put:
      tags:
        - device > planet
      summary: partialupdateplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d89610d
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-20T03:55:12.390Z'
                  updatedAt: '2024-09-13T05:44:39.843Z'
  /device/api/v1/planet/softDelete/{id}:
    put:
      tags:
        - device > planet
      summary: softDeleteplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/planet/softDeleteMany:
    put:
      tags:
        - device > planet
      summary: softDeleteManyplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/planet/updateBulk:
    put:
      tags:
        - device > planet
      summary: updateBulkplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/planet/delete/{id}:
    delete:
      tags:
        - device > planet
      summary: deleteplanet
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/cluster/{id}:
    get:
      tags:
        - device > cluster
      summary: getcluster
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d896122
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-17T00:20:44.854Z'
                  updatedAt: '2024-07-31T09:18:58.493Z'
  /device/api/v1/cluster/create:
    post:
      tags:
        - device > cluster
      summary: addcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                planet: 66901e9e73fe54012d896117
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d896120
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-17T00:20:44.854Z'
                  updatedAt: '2024-07-31T09:18:58.493Z'
  /device/api/v1/cluster/list:
    post:
      tags:
        - device > cluster
      summary: findAllcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - planet: 66901e9e73fe54012d896117
                      id: 66901e9e73fe54012d896121
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-02-17T00:20:44.854Z'
                      updatedAt: '2024-07-31T09:18:58.493Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/cluster/count:
    post:
      tags:
        - device > cluster
      summary: getclusterCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/cluster/addBulk:
    post:
      tags:
        - device > cluster
      summary: insertBulkcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - planet: 66901e9e73fe54012d896117
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/cluster/deleteMany:
    post:
      tags:
        - device > cluster
      summary: deleteManycluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/cluster/update/{id}:
    put:
      tags:
        - device > cluster
      summary: updatecluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                planet: 66901e9e73fe54012d896117
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d896123
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-17T00:20:44.854Z'
                  updatedAt: '2024-07-31T09:18:58.493Z'
  /device/api/v1/cluster/partial-update/{id}:
    put:
      tags:
        - device > cluster
      summary: partialupdatecluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d896124
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-17T00:20:44.854Z'
                  updatedAt: '2024-07-31T09:18:58.493Z'
  /device/api/v1/cluster/softDelete/{id}:
    put:
      tags:
        - device > cluster
      summary: softDeletecluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/cluster/softDeleteMany:
    put:
      tags:
        - device > cluster
      summary: softDeleteManycluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/cluster/updateBulk:
    put:
      tags:
        - device > cluster
      summary: updateBulkcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/cluster/delete/{id}:
    delete:
      tags:
        - device > cluster
      summary: deletecluster
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/chunk/{id}:
    get:
      tags:
        - device > chunk
      summary: getchunk
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d89613a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-02T15:01:35.260Z'
                  updatedAt: '2025-04-14T09:15:33.318Z'
  /device/api/v1/chunk/create:
    post:
      tags:
        - device > chunk
      summary: addchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cluster: 66901e9e73fe54012d89612e
                chunkdata:
                  - _id: false
                    l: 462
                    storage: true
                    ridybody: false
                blockstate:
                  - _id: false
                    x: 103
                    'y': 132
                    z: 546
                    c: 917
                chat: 66901e9e73fe54012d89612f
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d896138
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-02T15:01:35.260Z'
                  updatedAt: '2025-04-14T09:15:33.318Z'
  /device/api/v1/chunk/list:
    post:
      tags:
        - device > chunk
      summary: findAllchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - cluster: 66901e9e73fe54012d89612e
                      chunkdata:
                        - _id: false
                          l: 462
                          storage: true
                          ridybody: false
                      blockstate:
                        - _id: false
                          x: 103
                          'y': 132
                          z: 546
                          c: 917
                      chat: 66901e9e73fe54012d89612f
                      id: 66901e9e73fe54012d896139
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-02-02T15:01:35.260Z'
                      updatedAt: '2025-04-14T09:15:33.318Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/chunk/count:
    post:
      tags:
        - device > chunk
      summary: getchunkCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/chunk/addBulk:
    post:
      tags:
        - device > chunk
      summary: insertBulkchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - cluster: 66901e9e73fe54012d89612e
                    chunkdata:
                      - _id: false
                        l: 462
                        storage: true
                        ridybody: false
                    blockstate:
                      - _id: false
                        x: 103
                        'y': 132
                        z: 546
                        c: 917
                    chat: 66901e9e73fe54012d89612f
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chunk/deleteMany:
    post:
      tags:
        - device > chunk
      summary: deleteManychunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chunk/update/{id}:
    put:
      tags:
        - device > chunk
      summary: updatechunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cluster: 66901e9e73fe54012d89612e
                chunkdata:
                  - _id: false
                    l: 462
                    storage: true
                    ridybody: false
                blockstate:
                  - _id: false
                    x: 103
                    'y': 132
                    z: 546
                    c: 917
                chat: 66901e9e73fe54012d89612f
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d89613b
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-02T15:01:35.260Z'
                  updatedAt: '2025-04-14T09:15:33.318Z'
  /device/api/v1/chunk/partial-update/{id}:
    put:
      tags:
        - device > chunk
      summary: partialupdatechunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d89613c
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-02-02T15:01:35.260Z'
                  updatedAt: '2025-04-14T09:15:33.318Z'
  /device/api/v1/chunk/softDelete/{id}:
    put:
      tags:
        - device > chunk
      summary: softDeletechunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chunk/softDeleteMany:
    put:
      tags:
        - device > chunk
      summary: softDeleteManychunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chunk/updateBulk:
    put:
      tags:
        - device > chunk
      summary: updateBulkchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/chunk/delete/{id}:
    delete:
      tags:
        - device > chunk
      summary: deletechunk
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/universe/{id}:
    get:
      tags:
        - device > universe
      summary: getuniverse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d896150
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-20T06:26:24.223Z'
                  updatedAt: '2024-11-14T03:42:37.445Z'
  /device/api/v1/universe/create:
    post:
      tags:
        - device > universe
      summary: adduniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Mario Davis
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d89614e
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-20T06:26:24.223Z'
                  updatedAt: '2024-11-14T03:42:37.445Z'
  /device/api/v1/universe/list:
    post:
      tags:
        - device > universe
      summary: findAlluniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Mario Davis
                      id: 66901e9e73fe54012d89614f
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-11-20T06:26:24.223Z'
                      updatedAt: '2024-11-14T03:42:37.445Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/universe/count:
    post:
      tags:
        - device > universe
      summary: getuniverseCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/universe/addBulk:
    post:
      tags:
        - device > universe
      summary: insertBulkuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Mario Davis
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/universe/deleteMany:
    post:
      tags:
        - device > universe
      summary: deleteManyuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/universe/update/{id}:
    put:
      tags:
        - device > universe
      summary: updateuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Mario Davis
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d896151
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-20T06:26:24.223Z'
                  updatedAt: '2024-11-14T03:42:37.445Z'
  /device/api/v1/universe/partial-update/{id}:
    put:
      tags:
        - device > universe
      summary: partialupdateuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d896152
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-20T06:26:24.223Z'
                  updatedAt: '2024-11-14T03:42:37.445Z'
  /device/api/v1/universe/softDelete/{id}:
    put:
      tags:
        - device > universe
      summary: softDeleteuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/universe/softDeleteMany:
    put:
      tags:
        - device > universe
      summary: softDeleteManyuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/universe/updateBulk:
    put:
      tags:
        - device > universe
      summary: updateBulkuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/universe/delete/{id}:
    delete:
      tags:
        - device > universe
      summary: deleteuniverse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /device/api/v1/user/{id}:
    get:
      tags:
        - device > user
      summary: getuser
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896169
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T04:12:29.225Z'
                  updatedAt: '2025-04-19T14:56:46.908Z'
  /device/api/v1/user/me:
    get:
      tags:
        - device > user
      summary: get loggedin User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d89616f
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T04:12:29.225Z'
                  updatedAt: '2025-04-19T14:56:46.908Z'
  /device/api/v1/user/create:
    post:
      tags:
        - device > user
      summary: adduser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896167
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T04:12:29.225Z'
                  updatedAt: '2025-04-19T14:56:46.908Z'
  /device/api/v1/user/list:
    post:
      tags:
        - device > user
      summary: findAlluser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - username: Keith_Kozey76
                      email: Nannie.Spencer68@hotmail.com
                      name: Darlene Wisoky DVM
                      data:
                        - _id: false
                          section: Nebraska
                      mobileNo: (365) 861-0519
                      userType: 1
                      id: 66901e9e73fe54012d896168
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-03-06T04:12:29.225Z'
                      updatedAt: '2025-04-19T14:56:46.908Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /device/api/v1/user/count:
    post:
      tags:
        - device > user
      summary: getuserCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /device/api/v1/user/addBulk:
    post:
      tags:
        - device > user
      summary: insertBulkuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - username: Keith_Kozey76
                    password: aWJya7CBhAMGbia
                    email: Nannie.Spencer68@hotmail.com
                    name: Darlene Wisoky DVM
                    data:
                      - _id: false
                        section: Nebraska
                    mobileNo: (365) 861-0519
                    userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/user/update/{id}:
    put:
      tags:
        - device > user
      summary: updateuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d89616a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T04:12:29.225Z'
                  updatedAt: '2025-04-19T14:56:46.908Z'
  /device/api/v1/user/partial-update/{id}:
    put:
      tags:
        - device > user
      summary: partialupdateuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d89616b
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T04:12:29.225Z'
                  updatedAt: '2025-04-19T14:56:46.908Z'
  /device/api/v1/user/updateBulk:
    put:
      tags:
        - device > user
      summary: updateBulkuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /device/api/v1/user/update-profile:
    put:
      tags:
        - device > user
      summary: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d89616e
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-03-06T04:12:29.225Z'
                  updatedAt: '2025-04-19T14:56:46.908Z'
  /device/auth/login:
    post:
      tags:
        - device > login
      summary: Login in device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: username
                password: password
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  id: 66901e9e73fe54012d896170
                  loginRetryLimit: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWRlZDVjMGFjMjAxMmFjMDI4ODkxZiIsInVzZXJuYW1lIjoiYWRtaW4iLCJpYXQiOjE2MjkzNTEyNzAsImV4cCI6MTYyOTk1MTI3MH0.BJ-WKjNYeFDQ4pn8kfli5gwn6GLz_c3voFht20Agj9k
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-30T03:26:13.314Z'
                  updatedAt: '2024-11-26T13:22:22.073Z'
  /device/auth/register:
    post:
      tags:
        - device > login
      summary: Register User in device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  id: 66901e9e73fe54012d896170
                  loginRetryLimit: 0
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-09-30T03:26:13.314Z'
                  updatedAt: '2024-11-26T13:22:22.073Z'
  /device/auth/forgot-password:
    post:
      tags:
        - device > login
      summary: Forgot Password in device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: yourmail@gmail.com
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: otp successfully send to your email.
                data: {}
  /device/auth/validate-otp:
    post:
      tags:
        - device > login
      summary: Validate OTP in device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp: '5898'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Invalid OTP
                data: {}
  /device/auth/logout:
    post:
      tags:
        - device > login
      summary: Logout in device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /device/api/v1/user/change-password:
    put:
      tags:
        - device > login
      summary: Change Password in device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                oldPassword: OldPassword
                newPassword: NewPassword
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password changed successfully
                data: {}
  /device/auth/reset-password:
    put:
      tags:
        - device > login
      summary: Reset password in device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                code: '5898'
                newPassword: yourPassword
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password reset successfully
                data: {}
  /client/api/v1/chat_group/{id}:
    get:
      tags:
        - client > Chat_group
      summary: getChat_group
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d896089
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-22T00:31:33.804Z'
                  updatedAt: '2025-02-10T15:26:25.710Z'
  /client/api/v1/chat_group/create:
    post:
      tags:
        - client > Chat_group
      summary: addChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Grant Wolff
                code: web-enabled
                admin: cutting-edge
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d896087
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-22T00:31:33.804Z'
                  updatedAt: '2025-02-10T15:26:25.710Z'
  /client/api/v1/chat_group/list:
    post:
      tags:
        - client > Chat_group
      summary: findAllChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Grant Wolff
                      code: web-enabled
                      admin: cutting-edge
                      id: 66901e9e73fe54012d896088
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-11-22T00:31:33.804Z'
                      updatedAt: '2025-02-10T15:26:25.710Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/chat_group/count:
    post:
      tags:
        - client > Chat_group
      summary: getChat_groupCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/chat_group/addBulk:
    post:
      tags:
        - client > Chat_group
      summary: insertBulkChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Grant Wolff
                    code: web-enabled
                    admin: cutting-edge
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/deleteMany:
    post:
      tags:
        - client > Chat_group
      summary: deleteManyChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/update/{id}:
    put:
      tags:
        - client > Chat_group
      summary: updateChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Grant Wolff
                code: web-enabled
                admin: cutting-edge
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d89608a
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-22T00:31:33.804Z'
                  updatedAt: '2025-02-10T15:26:25.710Z'
  /client/api/v1/chat_group/partial-update/{id}:
    put:
      tags:
        - client > Chat_group
      summary: partialupdateChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Grant Wolff
                  code: web-enabled
                  admin: cutting-edge
                  id: 66901e9e73fe54012d89608b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-11-22T00:31:33.804Z'
                  updatedAt: '2025-02-10T15:26:25.710Z'
  /client/api/v1/chat_group/softDelete/{id}:
    put:
      tags:
        - client > Chat_group
      summary: softDeleteChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/softDeleteMany:
    put:
      tags:
        - client > Chat_group
      summary: softDeleteManyChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/updateBulk:
    put:
      tags:
        - client > Chat_group
      summary: updateBulkChat_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_group/delete/{id}:
    delete:
      tags:
        - client > Chat_group
      summary: deleteChat_group
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/upload:
    post:
      tags:
        - client > File Upload
      summary: File upload in client
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Select file/s to upload
                  format: binary
                folder:
                  type: string
                  description: Optional, enable to upload file to specific folder
                  example: Enter foldername
                fileName:
                  type: string
                  description: Optional, enable to give Specific file name to uploaded File
                  example: Enter fileName
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: path to download file
  /client/api/v1/chat_message/{id}:
    get:
      tags:
        - client > Chat_message
      summary: getChat_message
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d8960a0
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-09T01:19:45.307Z'
                  updatedAt: '2024-09-08T15:18:16.004Z'
  /client/api/v1/chat_message/create:
    post:
      tags:
        - client > Chat_message
      summary: addChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: invoice
                sender: open
                recipient: Direct
                groupId: 66901e9e73fe54012d89608e
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d89609e
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-09T01:19:45.307Z'
                  updatedAt: '2024-09-08T15:18:16.004Z'
  /client/api/v1/chat_message/list:
    post:
      tags:
        - client > Chat_message
      summary: findAllChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - message: invoice
                      sender: open
                      recipient: Direct
                      groupId: 66901e9e73fe54012d89608e
                      id: 66901e9e73fe54012d89609f
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-10-09T01:19:45.307Z'
                      updatedAt: '2024-09-08T15:18:16.004Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/chat_message/count:
    post:
      tags:
        - client > Chat_message
      summary: getChat_messageCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/chat_message/addBulk:
    post:
      tags:
        - client > Chat_message
      summary: insertBulkChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - message: invoice
                    sender: open
                    recipient: Direct
                    groupId: 66901e9e73fe54012d89608e
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/deleteMany:
    post:
      tags:
        - client > Chat_message
      summary: deleteManyChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/update/{id}:
    put:
      tags:
        - client > Chat_message
      summary: updateChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: invoice
                sender: open
                recipient: Direct
                groupId: 66901e9e73fe54012d89608e
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d8960a1
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-09T01:19:45.307Z'
                  updatedAt: '2024-09-08T15:18:16.004Z'
  /client/api/v1/chat_message/partial-update/{id}:
    put:
      tags:
        - client > Chat_message
      summary: partialupdateChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  message: invoice
                  sender: open
                  recipient: Direct
                  groupId: 66901e9e73fe54012d89608e
                  id: 66901e9e73fe54012d8960a2
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-09T01:19:45.307Z'
                  updatedAt: '2024-09-08T15:18:16.004Z'
  /client/api/v1/chat_message/softDelete/{id}:
    put:
      tags:
        - client > Chat_message
      summary: softDeleteChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/softDeleteMany:
    put:
      tags:
        - client > Chat_message
      summary: softDeleteManyChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/updateBulk:
    put:
      tags:
        - client > Chat_message
      summary: updateBulkChat_message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chat_message/delete/{id}:
    delete:
      tags:
        - client > Chat_message
      summary: deleteChat_message
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/item/{id}:
    get:
      tags:
        - client > item
      summary: getitem
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960b7
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-14T09:01:52.013Z'
                  updatedAt: '2025-05-04T17:57:20.808Z'
  /client/api/v1/item/create:
    post:
      tags:
        - client > item
      summary: additem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Emanuel Oberbrunner
                description: Bedfordshire
                image: Stand-alone
                blockstate: 66901e9e73fe54012d8960a5
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960b5
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-14T09:01:52.013Z'
                  updatedAt: '2025-05-04T17:57:20.808Z'
  /client/api/v1/item/list:
    post:
      tags:
        - client > item
      summary: findAllitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Emanuel Oberbrunner
                      description: Bedfordshire
                      image: Stand-alone
                      blockstate: 66901e9e73fe54012d8960a5
                      id: 66901e9e73fe54012d8960b6
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-05-14T09:01:52.013Z'
                      updatedAt: '2025-05-04T17:57:20.808Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/item/count:
    post:
      tags:
        - client > item
      summary: getitemCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/item/addBulk:
    post:
      tags:
        - client > item
      summary: insertBulkitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Emanuel Oberbrunner
                    description: Bedfordshire
                    image: Stand-alone
                    blockstate: 66901e9e73fe54012d8960a5
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/deleteMany:
    post:
      tags:
        - client > item
      summary: deleteManyitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/update/{id}:
    put:
      tags:
        - client > item
      summary: updateitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Emanuel Oberbrunner
                description: Bedfordshire
                image: Stand-alone
                blockstate: 66901e9e73fe54012d8960a5
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960b8
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-14T09:01:52.013Z'
                  updatedAt: '2025-05-04T17:57:20.808Z'
  /client/api/v1/item/partial-update/{id}:
    put:
      tags:
        - client > item
      summary: partialupdateitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Emanuel Oberbrunner
                  description: Bedfordshire
                  image: Stand-alone
                  blockstate: 66901e9e73fe54012d8960a5
                  id: 66901e9e73fe54012d8960b9
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-14T09:01:52.013Z'
                  updatedAt: '2025-05-04T17:57:20.808Z'
  /client/api/v1/item/softDelete/{id}:
    put:
      tags:
        - client > item
      summary: softDeleteitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/softDeleteMany:
    put:
      tags:
        - client > item
      summary: softDeleteManyitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/updateBulk:
    put:
      tags:
        - client > item
      summary: updateBulkitem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/item/delete/{id}:
    delete:
      tags:
        - client > item
      summary: deleteitem
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/model/{id}:
    get:
      tags:
        - client > model
      summary: getmodel
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960cd
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-02T19:03:35.227Z'
                  updatedAt: '2025-06-07T03:36:39.826Z'
  /client/api/v1/model/create:
    post:
      tags:
        - client > model
      summary: addmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Wesley Smith
                ip: 306
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960cb
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-02T19:03:35.227Z'
                  updatedAt: '2025-06-07T03:36:39.826Z'
  /client/api/v1/model/list:
    post:
      tags:
        - client > model
      summary: findAllmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Wesley Smith
                      ip: 306
                      id: 66901e9e73fe54012d8960cc
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-10-02T19:03:35.227Z'
                      updatedAt: '2025-06-07T03:36:39.826Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/model/count:
    post:
      tags:
        - client > model
      summary: getmodelCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/model/addBulk:
    post:
      tags:
        - client > model
      summary: insertBulkmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Wesley Smith
                    ip: 306
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/model/deleteMany:
    post:
      tags:
        - client > model
      summary: deleteManymodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/model/update/{id}:
    put:
      tags:
        - client > model
      summary: updatemodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Wesley Smith
                ip: 306
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960ce
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-02T19:03:35.227Z'
                  updatedAt: '2025-06-07T03:36:39.826Z'
  /client/api/v1/model/partial-update/{id}:
    put:
      tags:
        - client > model
      summary: partialupdatemodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Wesley Smith
                  ip: 306
                  id: 66901e9e73fe54012d8960cf
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-10-02T19:03:35.227Z'
                  updatedAt: '2025-06-07T03:36:39.826Z'
  /client/api/v1/model/softDelete/{id}:
    put:
      tags:
        - client > model
      summary: softDeletemodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/model/softDeleteMany:
    put:
      tags:
        - client > model
      summary: softDeleteManymodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/model/updateBulk:
    put:
      tags:
        - client > model
      summary: updateBulkmodel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/model/delete/{id}:
    delete:
      tags:
        - client > model
      summary: deletemodel
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/material/{id}:
    get:
      tags:
        - client > material
      summary: getmaterial
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960e3
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-02T13:31:54.627Z'
                  updatedAt: '2024-11-24T04:07:21.228Z'
  /client/api/v1/material/create:
    post:
      tags:
        - client > material
      summary: addmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                material:
                  - _id: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960e1
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-02T13:31:54.627Z'
                  updatedAt: '2024-11-24T04:07:21.228Z'
  /client/api/v1/material/list:
    post:
      tags:
        - client > material
      summary: findAllmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - material:
                        - _id: false
                      id: 66901e9e73fe54012d8960e2
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-01-02T13:31:54.627Z'
                      updatedAt: '2024-11-24T04:07:21.228Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/material/count:
    post:
      tags:
        - client > material
      summary: getmaterialCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/material/addBulk:
    post:
      tags:
        - client > material
      summary: insertBulkmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - material:
                      - _id: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/deleteMany:
    post:
      tags:
        - client > material
      summary: deleteManymaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/update/{id}:
    put:
      tags:
        - client > material
      summary: updatematerial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                material:
                  - _id: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960e4
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-02T13:31:54.627Z'
                  updatedAt: '2024-11-24T04:07:21.228Z'
  /client/api/v1/material/partial-update/{id}:
    put:
      tags:
        - client > material
      summary: partialupdatematerial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  material:
                    - _id: false
                  id: 66901e9e73fe54012d8960e5
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-02T13:31:54.627Z'
                  updatedAt: '2024-11-24T04:07:21.228Z'
  /client/api/v1/material/softDelete/{id}:
    put:
      tags:
        - client > material
      summary: softDeletematerial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/softDeleteMany:
    put:
      tags:
        - client > material
      summary: softDeleteManymaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/updateBulk:
    put:
      tags:
        - client > material
      summary: updateBulkmaterial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/material/delete/{id}:
    delete:
      tags:
        - client > material
      summary: deletematerial
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/blockstate/{id}:
    get:
      tags:
        - client > blockstate
      summary: getblockstate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960fb
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-19T06:05:32.481Z'
                  updatedAt: '2025-04-24T03:05:07.309Z'
  /client/api/v1/blockstate/create:
    post:
      tags:
        - client > blockstate
      summary: addblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                blockstate: 788
                material: 66901e9e73fe54012d8960e8
                model: 66901e9e73fe54012d8960e9
                name: Janet Ullrich
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960f9
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-19T06:05:32.481Z'
                  updatedAt: '2025-04-24T03:05:07.309Z'
  /client/api/v1/blockstate/list:
    post:
      tags:
        - client > blockstate
      summary: findAllblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - blockstate: 788
                      material: 66901e9e73fe54012d8960e8
                      model: 66901e9e73fe54012d8960e9
                      name: Janet Ullrich
                      id: 66901e9e73fe54012d8960fa
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-05-19T06:05:32.481Z'
                      updatedAt: '2025-04-24T03:05:07.309Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/blockstate/count:
    post:
      tags:
        - client > blockstate
      summary: getblockstateCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/blockstate/addBulk:
    post:
      tags:
        - client > blockstate
      summary: insertBulkblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - blockstate: 788
                    material: 66901e9e73fe54012d8960e8
                    model: 66901e9e73fe54012d8960e9
                    name: Janet Ullrich
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/deleteMany:
    post:
      tags:
        - client > blockstate
      summary: deleteManyblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/update/{id}:
    put:
      tags:
        - client > blockstate
      summary: updateblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                blockstate: 788
                material: 66901e9e73fe54012d8960e8
                model: 66901e9e73fe54012d8960e9
                name: Janet Ullrich
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960fc
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-19T06:05:32.481Z'
                  updatedAt: '2025-04-24T03:05:07.309Z'
  /client/api/v1/blockstate/partial-update/{id}:
    put:
      tags:
        - client > blockstate
      summary: partialupdateblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  blockstate: 788
                  material: 66901e9e73fe54012d8960e8
                  model: 66901e9e73fe54012d8960e9
                  name: Janet Ullrich
                  id: 66901e9e73fe54012d8960fd
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-05-19T06:05:32.481Z'
                  updatedAt: '2025-04-24T03:05:07.309Z'
  /client/api/v1/blockstate/softDelete/{id}:
    put:
      tags:
        - client > blockstate
      summary: softDeleteblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/softDeleteMany:
    put:
      tags:
        - client > blockstate
      summary: softDeleteManyblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/updateBulk:
    put:
      tags:
        - client > blockstate
      summary: updateBulkblockstate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/blockstate/delete/{id}:
    delete:
      tags:
        - client > blockstate
      summary: deleteblockstate
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/planet/{id}:
    get:
      tags:
        - client > planet
      summary: getplanet
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d896112
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-03T07:25:35.090Z'
                  updatedAt: '2025-02-08T15:51:55.398Z'
  /client/api/v1/planet/create:
    post:
      tags:
        - client > planet
      summary: addplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                universe: 66901e9e73fe54012d896100
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d896110
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-03T07:25:35.090Z'
                  updatedAt: '2025-02-08T15:51:55.398Z'
  /client/api/v1/planet/list:
    post:
      tags:
        - client > planet
      summary: findAllplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - universe: 66901e9e73fe54012d896100
                      id: 66901e9e73fe54012d896111
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-01-03T07:25:35.090Z'
                      updatedAt: '2025-02-08T15:51:55.398Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/planet/count:
    post:
      tags:
        - client > planet
      summary: getplanetCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/planet/addBulk:
    post:
      tags:
        - client > planet
      summary: insertBulkplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - universe: 66901e9e73fe54012d896100
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/planet/deleteMany:
    post:
      tags:
        - client > planet
      summary: deleteManyplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/planet/update/{id}:
    put:
      tags:
        - client > planet
      summary: updateplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                universe: 66901e9e73fe54012d896100
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d896113
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-03T07:25:35.090Z'
                  updatedAt: '2025-02-08T15:51:55.398Z'
  /client/api/v1/planet/partial-update/{id}:
    put:
      tags:
        - client > planet
      summary: partialupdateplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  universe: 66901e9e73fe54012d896100
                  id: 66901e9e73fe54012d896114
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-03T07:25:35.090Z'
                  updatedAt: '2025-02-08T15:51:55.398Z'
  /client/api/v1/planet/softDelete/{id}:
    put:
      tags:
        - client > planet
      summary: softDeleteplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/planet/softDeleteMany:
    put:
      tags:
        - client > planet
      summary: softDeleteManyplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/planet/updateBulk:
    put:
      tags:
        - client > planet
      summary: updateBulkplanet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/planet/delete/{id}:
    delete:
      tags:
        - client > planet
      summary: deleteplanet
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/cluster/{id}:
    get:
      tags:
        - client > cluster
      summary: getcluster
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d896129
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-01T01:13:15.629Z'
                  updatedAt: '2025-04-15T16:10:53.921Z'
  /client/api/v1/cluster/create:
    post:
      tags:
        - client > cluster
      summary: addcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                planet: 66901e9e73fe54012d896117
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d896127
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-01T01:13:15.629Z'
                  updatedAt: '2025-04-15T16:10:53.921Z'
  /client/api/v1/cluster/list:
    post:
      tags:
        - client > cluster
      summary: findAllcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - planet: 66901e9e73fe54012d896117
                      id: 66901e9e73fe54012d896128
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-01-01T01:13:15.629Z'
                      updatedAt: '2025-04-15T16:10:53.921Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/cluster/count:
    post:
      tags:
        - client > cluster
      summary: getclusterCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/cluster/addBulk:
    post:
      tags:
        - client > cluster
      summary: insertBulkcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - planet: 66901e9e73fe54012d896117
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/cluster/deleteMany:
    post:
      tags:
        - client > cluster
      summary: deleteManycluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/cluster/update/{id}:
    put:
      tags:
        - client > cluster
      summary: updatecluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                planet: 66901e9e73fe54012d896117
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d89612a
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-01T01:13:15.629Z'
                  updatedAt: '2025-04-15T16:10:53.921Z'
  /client/api/v1/cluster/partial-update/{id}:
    put:
      tags:
        - client > cluster
      summary: partialupdatecluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  planet: 66901e9e73fe54012d896117
                  id: 66901e9e73fe54012d89612b
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-01T01:13:15.629Z'
                  updatedAt: '2025-04-15T16:10:53.921Z'
  /client/api/v1/cluster/softDelete/{id}:
    put:
      tags:
        - client > cluster
      summary: softDeletecluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/cluster/softDeleteMany:
    put:
      tags:
        - client > cluster
      summary: softDeleteManycluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/cluster/updateBulk:
    put:
      tags:
        - client > cluster
      summary: updateBulkcluster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/cluster/delete/{id}:
    delete:
      tags:
        - client > cluster
      summary: deletecluster
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/chunk/{id}:
    get:
      tags:
        - client > chunk
      summary: getchunk
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d896141
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-13T03:56:51.269Z'
                  updatedAt: '2025-03-13T08:12:14.659Z'
  /client/api/v1/chunk/create:
    post:
      tags:
        - client > chunk
      summary: addchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cluster: 66901e9e73fe54012d89612e
                chunkdata:
                  - _id: false
                    l: 462
                    storage: true
                    ridybody: false
                blockstate:
                  - _id: false
                    x: 103
                    'y': 132
                    z: 546
                    c: 917
                chat: 66901e9e73fe54012d89612f
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d89613f
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-13T03:56:51.269Z'
                  updatedAt: '2025-03-13T08:12:14.659Z'
  /client/api/v1/chunk/list:
    post:
      tags:
        - client > chunk
      summary: findAllchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - cluster: 66901e9e73fe54012d89612e
                      chunkdata:
                        - _id: false
                          l: 462
                          storage: true
                          ridybody: false
                      blockstate:
                        - _id: false
                          x: 103
                          'y': 132
                          z: 546
                          c: 917
                      chat: 66901e9e73fe54012d89612f
                      id: 66901e9e73fe54012d896140
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-08-13T03:56:51.269Z'
                      updatedAt: '2025-03-13T08:12:14.659Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/chunk/count:
    post:
      tags:
        - client > chunk
      summary: getchunkCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/chunk/addBulk:
    post:
      tags:
        - client > chunk
      summary: insertBulkchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - cluster: 66901e9e73fe54012d89612e
                    chunkdata:
                      - _id: false
                        l: 462
                        storage: true
                        ridybody: false
                    blockstate:
                      - _id: false
                        x: 103
                        'y': 132
                        z: 546
                        c: 917
                    chat: 66901e9e73fe54012d89612f
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chunk/deleteMany:
    post:
      tags:
        - client > chunk
      summary: deleteManychunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chunk/update/{id}:
    put:
      tags:
        - client > chunk
      summary: updatechunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cluster: 66901e9e73fe54012d89612e
                chunkdata:
                  - _id: false
                    l: 462
                    storage: true
                    ridybody: false
                blockstate:
                  - _id: false
                    x: 103
                    'y': 132
                    z: 546
                    c: 917
                chat: 66901e9e73fe54012d89612f
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d896142
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-13T03:56:51.269Z'
                  updatedAt: '2025-03-13T08:12:14.659Z'
  /client/api/v1/chunk/partial-update/{id}:
    put:
      tags:
        - client > chunk
      summary: partialupdatechunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  cluster: 66901e9e73fe54012d89612e
                  chunkdata:
                    - _id: false
                      l: 462
                      storage: true
                      ridybody: false
                  blockstate:
                    - _id: false
                      x: 103
                      'y': 132
                      z: 546
                      c: 917
                  chat: 66901e9e73fe54012d89612f
                  id: 66901e9e73fe54012d896143
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-08-13T03:56:51.269Z'
                  updatedAt: '2025-03-13T08:12:14.659Z'
  /client/api/v1/chunk/softDelete/{id}:
    put:
      tags:
        - client > chunk
      summary: softDeletechunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chunk/softDeleteMany:
    put:
      tags:
        - client > chunk
      summary: softDeleteManychunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chunk/updateBulk:
    put:
      tags:
        - client > chunk
      summary: updateBulkchunk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/chunk/delete/{id}:
    delete:
      tags:
        - client > chunk
      summary: deletechunk
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/universe/{id}:
    get:
      tags:
        - client > universe
      summary: getuniverse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d896157
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-12-23T01:14:07.689Z'
                  updatedAt: '2025-01-23T13:49:20.581Z'
  /client/api/v1/universe/create:
    post:
      tags:
        - client > universe
      summary: adduniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Mario Davis
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d896155
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-12-23T01:14:07.689Z'
                  updatedAt: '2025-01-23T13:49:20.581Z'
  /client/api/v1/universe/list:
    post:
      tags:
        - client > universe
      summary: findAlluniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Mario Davis
                      id: 66901e9e73fe54012d896156
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-12-23T01:14:07.689Z'
                      updatedAt: '2025-01-23T13:49:20.581Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/universe/count:
    post:
      tags:
        - client > universe
      summary: getuniverseCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/universe/addBulk:
    post:
      tags:
        - client > universe
      summary: insertBulkuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Mario Davis
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/universe/deleteMany:
    post:
      tags:
        - client > universe
      summary: deleteManyuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/universe/update/{id}:
    put:
      tags:
        - client > universe
      summary: updateuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Mario Davis
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d896158
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-12-23T01:14:07.689Z'
                  updatedAt: '2025-01-23T13:49:20.581Z'
  /client/api/v1/universe/partial-update/{id}:
    put:
      tags:
        - client > universe
      summary: partialupdateuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Mario Davis
                  id: 66901e9e73fe54012d896159
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-12-23T01:14:07.689Z'
                  updatedAt: '2025-01-23T13:49:20.581Z'
  /client/api/v1/universe/softDelete/{id}:
    put:
      tags:
        - client > universe
      summary: softDeleteuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/universe/softDeleteMany:
    put:
      tags:
        - client > universe
      summary: softDeleteManyuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/universe/updateBulk:
    put:
      tags:
        - client > universe
      summary: updateBulkuniverse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/universe/delete/{id}:
    delete:
      tags:
        - client > universe
      summary: deleteuniverse
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/user/{id}:
    get:
      tags:
        - client > user
      summary: getuser
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896173
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-30T01:21:39.296Z'
                  updatedAt: '2024-08-28T09:23:19.696Z'
  /client/api/v1/user/me:
    get:
      tags:
        - client > user
      summary: get loggedin User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896179
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-30T01:21:39.296Z'
                  updatedAt: '2024-08-28T09:23:19.696Z'
  /client/api/v1/user/create:
    post:
      tags:
        - client > user
      summary: adduser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896171
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-30T01:21:39.296Z'
                  updatedAt: '2024-08-28T09:23:19.696Z'
  /client/api/v1/user/list:
    post:
      tags:
        - client > user
      summary: findAlluser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - username: Keith_Kozey76
                      email: Nannie.Spencer68@hotmail.com
                      name: Darlene Wisoky DVM
                      data:
                        - _id: false
                          section: Nebraska
                      mobileNo: (365) 861-0519
                      userType: 1
                      id: 66901e9e73fe54012d896172
                      isDeleted: false
                      isActive: true
                      createdAt: '2025-06-30T01:21:39.296Z'
                      updatedAt: '2024-08-28T09:23:19.696Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/user/count:
    post:
      tags:
        - client > user
      summary: getuserCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/user/addBulk:
    post:
      tags:
        - client > user
      summary: insertBulkuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - username: Keith_Kozey76
                    password: aWJya7CBhAMGbia
                    email: Nannie.Spencer68@hotmail.com
                    name: Darlene Wisoky DVM
                    data:
                      - _id: false
                        section: Nebraska
                    mobileNo: (365) 861-0519
                    userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/user/update/{id}:
    put:
      tags:
        - client > user
      summary: updateuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896174
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-30T01:21:39.296Z'
                  updatedAt: '2024-08-28T09:23:19.696Z'
  /client/api/v1/user/partial-update/{id}:
    put:
      tags:
        - client > user
      summary: partialupdateuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896175
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-30T01:21:39.296Z'
                  updatedAt: '2024-08-28T09:23:19.696Z'
  /client/api/v1/user/updateBulk:
    put:
      tags:
        - client > user
      summary: updateBulkuser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/user/update-profile:
    put:
      tags:
        - client > user
      summary: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  userType: 1
                  id: 66901e9e73fe54012d896178
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-06-30T01:21:39.296Z'
                  updatedAt: '2024-08-28T09:23:19.696Z'
  /client/auth/login:
    post:
      tags:
        - client > login
      summary: Login in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: username
                password: password
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  id: 66901e9e73fe54012d89617a
                  loginRetryLimit: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWRlZDVjMGFjMjAxMmFjMDI4ODkxZiIsInVzZXJuYW1lIjoiYWRtaW4iLCJpYXQiOjE2MjkzNTEyNzAsImV4cCI6MTYyOTk1MTI3MH0.BJ-WKjNYeFDQ4pn8kfli5gwn6GLz_c3voFht20Agj9k
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-11T06:25:51.867Z'
                  updatedAt: '2024-09-03T17:43:05.256Z'
  /client/auth/register:
    post:
      tags:
        - client > login
      summary: Register User in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: Keith_Kozey76
                password: aWJya7CBhAMGbia
                email: Nannie.Spencer68@hotmail.com
                name: Darlene Wisoky DVM
                data:
                  - _id: false
                    section: Nebraska
                mobileNo: (365) 861-0519
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  username: Keith_Kozey76
                  email: Nannie.Spencer68@hotmail.com
                  name: Darlene Wisoky DVM
                  data:
                    - _id: false
                      section: Nebraska
                  mobileNo: (365) 861-0519
                  id: 66901e9e73fe54012d89617a
                  loginRetryLimit: 0
                  isDeleted: false
                  isActive: true
                  createdAt: '2025-01-11T06:25:51.867Z'
                  updatedAt: '2024-09-03T17:43:05.256Z'
  /client/auth/forgot-password:
    post:
      tags:
        - client > login
      summary: Forgot Password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: yourmail@gmail.com
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: otp successfully send to your email.
                data: {}
  /client/auth/validate-otp:
    post:
      tags:
        - client > login
      summary: Validate OTP in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp: '5898'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Invalid OTP
                data: {}
  /client/auth/logout:
    post:
      tags:
        - client > login
      summary: Logout in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/api/v1/user/change-password:
    put:
      tags:
        - client > login
      summary: Change Password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                oldPassword: OldPassword
                newPassword: NewPassword
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password changed successfully
                data: {}
  /client/auth/reset-password:
    put:
      tags:
        - client > login
      summary: Reset password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                code: '5898'
                newPassword: yourPassword
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password reset successfully
                data: {}
